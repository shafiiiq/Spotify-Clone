{"ast":null,"code":"var _jsxFileName = \"C:\\\\Cloned Projects\\\\spotify\\\\src\\\\Componets\\\\SearchWrapper\\\\SearchWrapper.jsx\",\n  _s = $RefreshSig$();\nimport React, { useContext, useEffect } from 'react';\nimport { SearchProvider, SearchContext } from '../../context/SearchContext';\nimport SearchEngine from '../SearchEngine/SearchEngine';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction SearchWrapper() {\n  return /*#__PURE__*/_jsxDEV(SearchProvider, {\n    children: /*#__PURE__*/_jsxDEV(GetQuery, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 9\n  }, this);\n}\n_c = SearchWrapper;\nfunction GetQuery() {\n  _s();\n  const {\n    searchQuery\n  } = useContext(SearchContext);\n  useEffect(() => {\n    // console.log(searchQuery);\n  }, [searchQuery]);\n  return /*#__PURE__*/_jsxDEV(SearchEngine, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 12\n  }, this);\n}\n_s(GetQuery, \"c0nQ8BbPOO4wbt++fUa+1Vr76so=\");\n_c2 = GetQuery;\nexport default SearchWrapper;\nvar _c, _c2;\n$RefreshReg$(_c, \"SearchWrapper\");\n$RefreshReg$(_c2, \"GetQuery\");","map":{"version":3,"names":["React","useContext","useEffect","SearchProvider","SearchContext","SearchEngine","jsxDEV","_jsxDEV","SearchWrapper","children","GetQuery","fileName","_jsxFileName","lineNumber","columnNumber","_c","_s","searchQuery","_c2","$RefreshReg$"],"sources":["C:/Cloned Projects/spotify/src/Componets/SearchWrapper/SearchWrapper.jsx"],"sourcesContent":["import React, { useContext, useEffect } from 'react';\r\nimport { SearchProvider, SearchContext } from '../../context/SearchContext';\r\nimport SearchEngine from '../SearchEngine/SearchEngine';\r\n\r\nfunction SearchWrapper() {\r\n    return (\r\n        <SearchProvider>\r\n            <GetQuery />\r\n        </SearchProvider>\r\n    );\r\n}\r\n\r\nfunction GetQuery() {\r\n    const { searchQuery } = useContext(SearchContext);\r\n\r\n    useEffect(() => {\r\n        // console.log(searchQuery);\r\n    }, [searchQuery]);\r\n\r\n    return <SearchEngine />;\r\n}\r\n\r\nexport default SearchWrapper;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,UAAU,EAAEC,SAAS,QAAQ,OAAO;AACpD,SAASC,cAAc,EAAEC,aAAa,QAAQ,6BAA6B;AAC3E,OAAOC,YAAY,MAAM,8BAA8B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExD,SAASC,aAAaA,CAAA,EAAG;EACrB,oBACID,OAAA,CAACJ,cAAc;IAAAM,QAAA,eACXF,OAAA,CAACG,QAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEzB;AAACC,EAAA,GANQP,aAAa;AAQtB,SAASE,QAAQA,CAAA,EAAG;EAAAM,EAAA;EAChB,MAAM;IAAEC;EAAY,CAAC,GAAGhB,UAAU,CAACG,aAAa,CAAC;EAEjDF,SAAS,CAAC,MAAM;IACZ;EAAA,CACH,EAAE,CAACe,WAAW,CAAC,CAAC;EAEjB,oBAAOV,OAAA,CAACF,YAAY;IAAAM,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAC3B;AAACE,EAAA,CARQN,QAAQ;AAAAQ,GAAA,GAARR,QAAQ;AAUjB,eAAeF,aAAa;AAAC,IAAAO,EAAA,EAAAG,GAAA;AAAAC,YAAA,CAAAJ,EAAA;AAAAI,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}