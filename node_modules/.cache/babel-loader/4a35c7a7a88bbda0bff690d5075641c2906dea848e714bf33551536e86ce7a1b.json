{"ast":null,"code":"function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\n// use by https://github.com/ustbhuangyi/lyric-parser\nvar timeExp = /\\[(\\d{2,}):(\\d{2})(?:\\.(\\d{2,3}))?]/g;\nvar STATE_PAUSE = 0;\nvar STATE_PLAYING = 1;\nvar tagRegMap = {\n  title: 'ti',\n  artist: 'ar',\n  album: 'al',\n  offset: 'offset',\n  by: 'by'\n};\nvar Lyric = /*#__PURE__*/function () {\n  function Lyric(lrc) {\n    var handler = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : function () {};\n    _classCallCheck(this, Lyric);\n    this.lrc = lrc;\n    this.tags = {};\n    this.lines = [];\n    this.handler = handler;\n    this.state = STATE_PAUSE;\n    this.curLine = 0;\n    this._init();\n  }\n  _createClass(Lyric, [{\n    key: \"_init\",\n    value: function _init() {\n      this._initTag();\n      this._initLines();\n    }\n  }, {\n    key: \"_initTag\",\n    value: function _initTag() {\n      for (var tag in tagRegMap) {\n        var matches = this.lrc.match(new RegExp(\"\\\\[\".concat(tagRegMap[tag], \":([^\\\\]]*)]\"), 'i'));\n        this.tags[tag] = matches && matches[1] || '';\n      }\n    }\n  }, {\n    key: \"_initLines\",\n    value: function _initLines() {\n      var lines = this.lrc.split('\\n');\n      var offset = parseInt(this.tags.offset, 10) || 0;\n      for (var i = 0; i < lines.length; i++) {\n        var line = lines[i];\n        var result = timeExp.exec(line);\n        if (result) {\n          var txt = line.replace(timeExp, '').trim();\n          if (txt) {\n            this.lines.push({\n              time: result[1] * 60 * 1000 + result[2] * 1000 + (result[3] || 0) * 10 + offset,\n              txt: txt\n            });\n          }\n        }\n      }\n      this.lines.sort(function (a, b) {\n        return a.time - b.time;\n      });\n    }\n  }, {\n    key: \"_findCurNum\",\n    value: function _findCurNum(time) {\n      for (var i = 0; i < this.lines.length; i++) {\n        if (time <= this.lines[i].time) {\n          return i;\n        }\n      }\n      return this.lines.length - 1;\n    }\n  }, {\n    key: \"_callHandler\",\n    value: function _callHandler(i) {\n      if (i < 0) {\n        return;\n      }\n      this.handler({\n        txt: this.lines[i].txt,\n        lineNum: i\n      });\n    }\n  }, {\n    key: \"_playRest\",\n    value: function _playRest() {\n      var _this = this;\n      var line = this.lines[this.curNum];\n      var delay = line.time - (+new Date() - this.startStamp);\n      this.timer = setTimeout(function () {\n        _this._callHandler(_this.curNum++);\n        if (_this.curNum < _this.lines.length && _this.state === STATE_PLAYING) {\n          _this._playRest();\n        }\n      }, delay);\n    }\n  }, {\n    key: \"play\",\n    value: function play() {\n      var startTime = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n      var skipLast = arguments.length > 1 ? arguments[1] : undefined;\n      if (!this.lines.length) {\n        return;\n      }\n      this.state = STATE_PLAYING;\n      this.curNum = this._findCurNum(startTime);\n      this.startStamp = +new Date() - startTime;\n      if (!skipLast) {\n        this._callHandler(this.curNum - 1);\n      }\n      if (this.curNum < this.lines.length) {\n        clearTimeout(this.timer);\n        this._playRest();\n      }\n    }\n  }, {\n    key: \"togglePlay\",\n    value: function togglePlay() {\n      var now = +new Date();\n      if (this.state === STATE_PLAYING) {\n        this.stop();\n        this.pauseStamp = now;\n      } else {\n        this.state = STATE_PLAYING;\n        this.play((this.pauseStamp || now) - (this.startStamp || now), true);\n        this.pauseStamp = 0;\n      }\n    }\n  }, {\n    key: \"stop\",\n    value: function stop() {\n      this.state = STATE_PAUSE;\n      clearTimeout(this.timer);\n    }\n  }, {\n    key: \"seek\",\n    value: function seek(offset) {\n      this.play(offset);\n    }\n  }]);\n  return Lyric;\n}();\nexport { Lyric as default };","map":{"version":3,"names":["_classCallCheck","instance","Constructor","TypeError","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","_createClass","protoProps","staticProps","prototype","timeExp","STATE_PAUSE","STATE_PLAYING","tagRegMap","title","artist","album","offset","by","Lyric","lrc","handler","arguments","undefined","tags","lines","state","curLine","_init","value","_initTag","_initLines","tag","matches","match","RegExp","concat","split","parseInt","line","result","exec","txt","replace","trim","push","time","sort","a","b","_findCurNum","_callHandler","lineNum","_playRest","_this","curNum","delay","Date","startStamp","timer","setTimeout","play","startTime","skipLast","clearTimeout","togglePlay","now","stop","pauseStamp","seek","default"],"sources":["C:/Cloned Projects/spotify/node_modules/react-jinke-music-player/es/lyric.js"],"sourcesContent":["function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n// use by https://github.com/ustbhuangyi/lyric-parser\nvar timeExp = /\\[(\\d{2,}):(\\d{2})(?:\\.(\\d{2,3}))?]/g;\nvar STATE_PAUSE = 0;\nvar STATE_PLAYING = 1;\nvar tagRegMap = {\n  title: 'ti',\n  artist: 'ar',\n  album: 'al',\n  offset: 'offset',\n  by: 'by'\n};\n\nvar Lyric = /*#__PURE__*/function () {\n  function Lyric(lrc) {\n    var handler = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : function () {};\n\n    _classCallCheck(this, Lyric);\n\n    this.lrc = lrc;\n    this.tags = {};\n    this.lines = [];\n    this.handler = handler;\n    this.state = STATE_PAUSE;\n    this.curLine = 0;\n\n    this._init();\n  }\n\n  _createClass(Lyric, [{\n    key: \"_init\",\n    value: function _init() {\n      this._initTag();\n\n      this._initLines();\n    }\n  }, {\n    key: \"_initTag\",\n    value: function _initTag() {\n      for (var tag in tagRegMap) {\n        var matches = this.lrc.match(new RegExp(\"\\\\[\".concat(tagRegMap[tag], \":([^\\\\]]*)]\"), 'i'));\n        this.tags[tag] = matches && matches[1] || '';\n      }\n    }\n  }, {\n    key: \"_initLines\",\n    value: function _initLines() {\n      var lines = this.lrc.split('\\n');\n      var offset = parseInt(this.tags.offset, 10) || 0;\n\n      for (var i = 0; i < lines.length; i++) {\n        var line = lines[i];\n        var result = timeExp.exec(line);\n\n        if (result) {\n          var txt = line.replace(timeExp, '').trim();\n\n          if (txt) {\n            this.lines.push({\n              time: result[1] * 60 * 1000 + result[2] * 1000 + (result[3] || 0) * 10 + offset,\n              txt: txt\n            });\n          }\n        }\n      }\n\n      this.lines.sort(function (a, b) {\n        return a.time - b.time;\n      });\n    }\n  }, {\n    key: \"_findCurNum\",\n    value: function _findCurNum(time) {\n      for (var i = 0; i < this.lines.length; i++) {\n        if (time <= this.lines[i].time) {\n          return i;\n        }\n      }\n\n      return this.lines.length - 1;\n    }\n  }, {\n    key: \"_callHandler\",\n    value: function _callHandler(i) {\n      if (i < 0) {\n        return;\n      }\n\n      this.handler({\n        txt: this.lines[i].txt,\n        lineNum: i\n      });\n    }\n  }, {\n    key: \"_playRest\",\n    value: function _playRest() {\n      var _this = this;\n\n      var line = this.lines[this.curNum];\n      var delay = line.time - (+new Date() - this.startStamp);\n      this.timer = setTimeout(function () {\n        _this._callHandler(_this.curNum++);\n\n        if (_this.curNum < _this.lines.length && _this.state === STATE_PLAYING) {\n          _this._playRest();\n        }\n      }, delay);\n    }\n  }, {\n    key: \"play\",\n    value: function play() {\n      var startTime = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n      var skipLast = arguments.length > 1 ? arguments[1] : undefined;\n\n      if (!this.lines.length) {\n        return;\n      }\n\n      this.state = STATE_PLAYING;\n      this.curNum = this._findCurNum(startTime);\n      this.startStamp = +new Date() - startTime;\n\n      if (!skipLast) {\n        this._callHandler(this.curNum - 1);\n      }\n\n      if (this.curNum < this.lines.length) {\n        clearTimeout(this.timer);\n\n        this._playRest();\n      }\n    }\n  }, {\n    key: \"togglePlay\",\n    value: function togglePlay() {\n      var now = +new Date();\n\n      if (this.state === STATE_PLAYING) {\n        this.stop();\n        this.pauseStamp = now;\n      } else {\n        this.state = STATE_PLAYING;\n        this.play((this.pauseStamp || now) - (this.startStamp || now), true);\n        this.pauseStamp = 0;\n      }\n    }\n  }, {\n    key: \"stop\",\n    value: function stop() {\n      this.state = STATE_PAUSE;\n      clearTimeout(this.timer);\n    }\n  }, {\n    key: \"seek\",\n    value: function seek(offset) {\n      this.play(offset);\n    }\n  }]);\n\n  return Lyric;\n}();\n\nexport { Lyric as default };"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}