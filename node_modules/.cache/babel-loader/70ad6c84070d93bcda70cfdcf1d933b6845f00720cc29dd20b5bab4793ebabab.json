{"ast":null,"code":"var _jsxFileName = \"C:\\\\Cloned Projects\\\\spotify\\\\src\\\\Componets\\\\SearchWrapper\\\\SearchWrapper.jsx\",\n  _s = $RefreshSig$();\nimport React, { useContext, useEffect } from 'react';\n// import { SearchProvider, SearchContext } from '../../context/SearchContext';\nimport SearchEngine from '../SearchEngine/SearchEngine';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction SearchWrapper() {\n  return (\n    /*#__PURE__*/\n    // <SearchProvider>\n    //     <GetQuery />\n    // </SearchProvider>\n    _jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 9\n    }, this)\n  );\n}\n_c = SearchWrapper;\nfunction GetQuery() {\n  _s();\n  const {\n    searchQuery\n  } = useContext(SearchContext);\n  useEffect(() => {\n    console.log(searchQuery);\n  }, [searchQuery]);\n  return /*#__PURE__*/_jsxDEV(SearchEngine, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 12\n  }, this);\n}\n_s(GetQuery, \"c0nQ8BbPOO4wbt++fUa+1Vr76so=\");\n_c2 = GetQuery;\nexport default SearchWrapper;\nvar _c, _c2;\n$RefreshReg$(_c, \"SearchWrapper\");\n$RefreshReg$(_c2, \"GetQuery\");","map":{"version":3,"names":["React","useContext","useEffect","SearchEngine","jsxDEV","_jsxDEV","SearchWrapper","fileName","_jsxFileName","lineNumber","columnNumber","_c","GetQuery","_s","searchQuery","SearchContext","console","log","_c2","$RefreshReg$"],"sources":["C:/Cloned Projects/spotify/src/Componets/SearchWrapper/SearchWrapper.jsx"],"sourcesContent":["import React, { useContext, useEffect } from 'react';\r\n// import { SearchProvider, SearchContext } from '../../context/SearchContext';\r\nimport SearchEngine from '../SearchEngine/SearchEngine';\r\n\r\nfunction SearchWrapper() {\r\n    return (\r\n        // <SearchProvider>\r\n        //     <GetQuery />\r\n        // </SearchProvider>\r\n        <div></div>\r\n    );\r\n}\r\n\r\nfunction GetQuery() {\r\n    const { searchQuery } = useContext(SearchContext);\r\n\r\n    useEffect(() => {\r\n        console.log(searchQuery);\r\n    }, [searchQuery]);\r\n\r\n    return <SearchEngine />;\r\n}\r\n\r\nexport default SearchWrapper;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,UAAU,EAAEC,SAAS,QAAQ,OAAO;AACpD;AACA,OAAOC,YAAY,MAAM,8BAA8B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExD,SAASC,aAAaA,CAAA,EAAG;EACrB;IAAA;IACI;IACA;IACA;IACAD,OAAA;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAU;EAAC;AAEnB;AAACC,EAAA,GAPQL,aAAa;AAStB,SAASM,QAAQA,CAAA,EAAG;EAAAC,EAAA;EAChB,MAAM;IAAEC;EAAY,CAAC,GAAGb,UAAU,CAACc,aAAa,CAAC;EAEjDb,SAAS,CAAC,MAAM;IACZc,OAAO,CAACC,GAAG,CAACH,WAAW,CAAC;EAC5B,CAAC,EAAE,CAACA,WAAW,CAAC,CAAC;EAEjB,oBAAOT,OAAA,CAACF,YAAY;IAAAI,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAC3B;AAACG,EAAA,CARQD,QAAQ;AAAAM,GAAA,GAARN,QAAQ;AAUjB,eAAeN,aAAa;AAAC,IAAAK,EAAA,EAAAO,GAAA;AAAAC,YAAA,CAAAR,EAAA;AAAAQ,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}