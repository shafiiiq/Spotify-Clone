{"ast":null,"code":"var _jsxFileName = \"C:\\\\Cloned Projects\\\\spotify\\\\src\\\\HandleClick\\\\HandleClick.jsx\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState } from 'react';\n\n// check serach button is clicked \nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const IsClicked = /*#__PURE__*/createContext();\nexport const SearchIsClicked = ({\n  children\n}) => {\n  _s();\n  const [isSearch, setIsSearch] = useState(false);\n  return /*#__PURE__*/_jsxDEV(IsClicked.Provider, {\n    value: {\n      isSearch,\n      setIsSearch\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, this);\n};\n_s(SearchIsClicked, \"MCprB3c2SULg2AFll4uoUaVL3mE=\");\n_c = SearchIsClicked;\nvar _c;\n$RefreshReg$(_c, \"SearchIsClicked\");","map":{"version":3,"names":["React","createContext","useState","jsxDEV","_jsxDEV","IsClicked","SearchIsClicked","children","_s","isSearch","setIsSearch","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Cloned Projects/spotify/src/HandleClick/HandleClick.jsx"],"sourcesContent":["import React, { createContext, useState } from 'react';\r\n\r\n// check serach button is clicked \r\nexport const IsClicked = createContext();\r\n\r\nexport const SearchIsClicked = ({ children }) => {\r\n  const [isSearch, setIsSearch] = useState(false);\r\n\r\n  return (\r\n    <IsClicked.Provider value={{ isSearch, setIsSearch }}>\r\n      {children}\r\n    </IsClicked.Provider>\r\n  );\r\n};"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,QAAQ,OAAO;;AAEtD;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,OAAO,MAAMC,SAAS,gBAAGJ,aAAa,CAAC,CAAC;AAExC,OAAO,MAAMK,eAAe,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC/C,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,KAAK,CAAC;EAE/C,oBACEE,OAAA,CAACC,SAAS,CAACM,QAAQ;IAACC,KAAK,EAAE;MAAEH,QAAQ;MAAEC;IAAY,CAAE;IAAAH,QAAA,EAClDA;EAAQ;IAAAM,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACS,CAAC;AAEzB,CAAC;AAACR,EAAA,CARWF,eAAe;AAAAW,EAAA,GAAfX,eAAe;AAAA,IAAAW,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}